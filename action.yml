name: 'Push to ECR'
description: 'Combines various steps to push to ECR'
  
inputs:
  aws_region: 
    decription: "The AWS region"
    required: true

  aws_access_key_id: 
    decription: "The AWS Access Key"
    required: true

  aws_secret_access_key: 
    decription: "The AWS Secret Key"
    required: true

  ecr_repository: 
    decription: "The name of the repository to push to"
    required: true

  # container_name: 
  #   description: "The name of the container"
  #   required: true
    

  runs:
    using: "composite"
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ inputs.aws_access_key_id }}
          aws-secret-access-key: ${{ inputs.aws_secret_access_key }}
          aws-region: ${{ inputs.aws_region }}

      - name: Login to Amazon ECR
        id: login_to_ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login_to_ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ inputs.ecr_repository }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and push it to ECR
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

          # Retag this as the latest
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"


